From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Mon, 21 Mar 2022 12:51:41 +1000
Subject: [PATCH] Add getAllOnlinePlayers and getLocalOnlinePlayers


diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 15a14a2d7e0b8da01fc0c12b068ce371aae09154..ae4f1dccda2ed1fb66219823271e3e067fb622c7 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -48,6 +48,7 @@ import net.minecraft.network.chat.PlayerChatMessage;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket;
 import net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket;
+import net.minecraft.network.protocol.game.ClientboundDisconnectPacket;
 import net.minecraft.network.protocol.game.ClientboundEntityEventPacket;
 import net.minecraft.network.protocol.game.ClientboundGameEventPacket;
 import net.minecraft.network.protocol.game.ClientboundInitializeBorderPacket;
@@ -64,6 +65,7 @@ import net.minecraft.network.protocol.game.ClientboundSetBorderWarningDistancePa
 import net.minecraft.network.protocol.game.ClientboundSetCarriedItemPacket;
 import net.minecraft.network.protocol.game.ClientboundSetChunkCacheRadiusPacket;
 import net.minecraft.network.protocol.game.ClientboundSetDefaultSpawnPositionPacket;
+import net.minecraft.network.protocol.game.ClientboundSetEntityDataPacket;
 import net.minecraft.network.protocol.game.ClientboundSetExperiencePacket;
 import net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket;
 import net.minecraft.network.protocol.game.ClientboundSetSimulationDistancePacket;
@@ -144,6 +146,7 @@ public abstract class PlayerList {
     private static final SimpleDateFormat BAN_DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd 'at' HH:mm:ss z");
     private final MinecraftServer server;
     public final List<ServerPlayer> players = new java.util.concurrent.CopyOnWriteArrayList(); // CraftBukkit - ArrayList -> CopyOnWriteArrayList: Iterator safety
+    public final List<ServerPlayer> localPlayers = new java.util.concurrent.CopyOnWriteArrayList(); // MultiPaper
     private final Map<UUID, ServerPlayer> playersByUUID = Maps.newHashMap();
     private final UserBanList bans;
     private final IpBanList ipBans;
@@ -324,6 +327,7 @@ public abstract class PlayerList {
 
         // player.connection.send(ClientboundPlayerInfoUpdatePacket.createPlayerInitializing(this.players)); // Paper
         this.players.add(player);
+        if (!(player instanceof ExternalPlayer)) this.localPlayers.add(player); // MultiPaper
         this.playersByName.put(player.getScoreboardName().toLowerCase(java.util.Locale.ROOT), player); // Spigot
         this.playersByUUID.put(player.getUUID(), player);
         // this.broadcastAll(ClientboundPlayerInfoUpdatePacket.createPlayerInitializing(List.of(entityplayer))); // CraftBukkit - replaced with loop below
@@ -657,6 +661,7 @@ public abstract class PlayerList {
         worldserver.removePlayerImmediately(entityplayer, Entity.RemovalReason.UNLOADED_WITH_PLAYER);
         entityplayer.getAdvancements().stopListening();
         this.players.remove(entityplayer);
+        if (!(entityplayer instanceof ExternalPlayer)) this.localPlayers.remove(entityplayer); // MultiPaper
         this.playersByName.remove(entityplayer.getScoreboardName().toLowerCase(java.util.Locale.ROOT)); // Spigot
         this.server.getCustomBossEvents().onPlayerDisconnect(entityplayer);
         UUID uuid = entityplayer.getUUID();
@@ -825,6 +830,7 @@ public abstract class PlayerList {
         // MultiPaper end
         entityplayer.stopRiding(); // CraftBukkit
         this.players.remove(entityplayer);
+        if (!(entityplayer instanceof ExternalPlayer)) this.localPlayers.remove(entityplayer); // MultiPaper
         this.playersByName.remove(entityplayer.getScoreboardName().toLowerCase(java.util.Locale.ROOT)); // Spigot
         entityplayer.getLevel().removePlayerImmediately(entityplayer, Entity.RemovalReason.DISCARDED);
         BlockPos blockposition = entityplayer.getRespawnPosition();
@@ -962,6 +968,7 @@ public abstract class PlayerList {
         if (!entityplayer.connection.isDisconnected()) {
             worldserver1.addRespawnedPlayer(entityplayer1);
             this.players.add(entityplayer1);
+            if (!(entityplayer1 instanceof ExternalPlayer)) this.localPlayers.add(entityplayer1); // MultiPaper
             this.playersByName.put(entityplayer1.getScoreboardName().toLowerCase(java.util.Locale.ROOT), entityplayer1); // Spigot
             this.playersByUUID.put(entityplayer1.getUUID(), entityplayer1);
         }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 50712dbc7b4ded47b12a15f511061d3efdb4c478..55d231d034b3636bf68fee1a7956c857ebd7be2d 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -287,6 +287,7 @@ public final class CraftServer implements Server {
     private final Object2IntOpenHashMap<SpawnCategory> spawnCategoryLimit = new Object2IntOpenHashMap<>();
     private final CraftMultiPaperNotificationManager multipaperNotificationManager = new CraftMultiPaperNotificationManager(); // MultiPaper
     private File container;
+    private Thread inTabCompletion; // MultiPaper
     private WarningState warningState = WarningState.DEFAULT;
     public String minimumAPI;
     public CraftScoreboardManager scoreboardManager;
@@ -296,6 +297,7 @@ public final class CraftServer implements Server {
     private boolean overrideAllCommandBlockCommands = false;
     public boolean ignoreVanillaPermissions = false;
     private final List<CraftPlayer> playerView;
+    private final List<CraftPlayer> localPlayerView; // Multipaper
     public int reloadCount;
     private final io.papermc.paper.datapack.PaperDatapackManager datapackManager; // Paper
     public static Exception excessiveVelEx; // Paper - Velocity warnings
@@ -318,6 +320,14 @@ public final class CraftServer implements Server {
                 return player.getBukkitEntity();
             }
         }));
+        // MultiPaper start
+        this.localPlayerView = Collections.unmodifiableList(Lists.transform(playerList.localPlayers, new Function<ServerPlayer, CraftPlayer>() {
+            @Override
+            public CraftPlayer apply(ServerPlayer player) {
+                return player.getBukkitEntity();
+            }
+        }));
+        // MultiPaper end
         this.serverVersion = CraftServer.class.getPackage().getImplementationVersion();
         this.structureManager = new CraftStructureManager(console.getStructureManager());
 
@@ -615,10 +625,28 @@ public final class CraftServer implements Server {
     }
     // Paper end
 
+    // MultiPaper start
     @Override
     public List<CraftPlayer> getOnlinePlayers() {
+        if (inTabCompletion != null && inTabCompletion == Thread.currentThread()) {
+            // If we're tab-completing, we probably want all the players
+            // instead of just the ones on our server.
+            return getAllOnlinePlayers();
+        } else {
+            return getLocalOnlinePlayers();
+        }
+    }
+
+    @Override
+    public List<CraftPlayer> getLocalOnlinePlayers() {
+        return this.localPlayerView;
+    }
+
+    @Override
+    public List<CraftPlayer> getAllOnlinePlayers() {
         return this.playerView;
     }
+    // MultiPaper end
 
     @Override
     @Deprecated
@@ -633,7 +661,7 @@ public final class CraftServer implements Server {
 
         String lowerName = name.toLowerCase(java.util.Locale.ENGLISH);
         int delta = Integer.MAX_VALUE;
-        for (Player player : this.getOnlinePlayers()) {
+        for (Player player : this.getAllOnlinePlayers()) { // MultiPaper
             if (player.getName().toLowerCase(java.util.Locale.ENGLISH).startsWith(lowerName)) {
                 int curDelta = Math.abs(player.getName().length() - lowerName.length());
                 if (curDelta < delta) {
@@ -680,7 +708,7 @@ public final class CraftServer implements Server {
 
         List<Player> matchedPlayers = new ArrayList<Player>();
 
-        for (Player iterPlayer : this.getOnlinePlayers()) {
+        for (Player iterPlayer : this.getAllOnlinePlayers()) { // MultiPaper
             String iterPlayerName = iterPlayer.getName();
 
             if (partialName.equalsIgnoreCase(iterPlayerName)) {
@@ -2152,7 +2180,7 @@ public final class CraftServer implements Server {
             }
         }
 
-        players.addAll(this.getOnlinePlayers());
+        players.addAll(this.getAllOnlinePlayers()); // MultiPaper
 
         return players.toArray(new OfflinePlayer[players.size()]);
     }
@@ -2323,6 +2351,8 @@ public final class CraftServer implements Server {
             return ImmutableList.of();
         }
 
+        inTabCompletion = Thread.currentThread(); // MultiPaper
+
         List<String> offers;
         Player player = (Player) sender;
         if (message.startsWith("/") || forceCommand) {
@@ -2334,6 +2364,8 @@ public final class CraftServer implements Server {
         TabCompleteEvent tabEvent = new TabCompleteEvent(player, message, offers, message.startsWith("/") || forceCommand, pos != null ? io.papermc.paper.util.MCUtil.toLocation(((CraftWorld) player.getWorld()).getHandle(), BlockPos.containing(pos)) : null); // Paper
         this.getPluginManager().callEvent(tabEvent);
 
+        inTabCompletion = null; // MultiPaper
+
         return tabEvent.isCancelled() ? Collections.EMPTY_LIST : tabEvent.getCompletions();
     }
 
@@ -2368,7 +2400,7 @@ public final class CraftServer implements Server {
         List<String> completions = new ArrayList<String>();
         PlayerChatTabCompleteEvent event = new PlayerChatTabCompleteEvent(player, message, completions);
         String token = event.getLastToken();
-        for (Player p : this.getOnlinePlayers()) {
+        for (Player p : this.getAllOnlinePlayers()) { // MultiPaper
             if (player.canSee(p) && StringUtil.startsWithIgnoreCase(p.getName(), token)) {
                 completions.add(p.getName());
             }
@@ -2869,14 +2901,14 @@ public final class CraftServer implements Server {
 
         @Override
         public void broadcast(BaseComponent component) {
-            for (Player player : CraftServer.this.getOnlinePlayers()) {
+            for (Player player : CraftServer.this.getAllOnlinePlayers()) { // MultiPaper
                 player.spigot().sendMessage(component);
             }
         }
 
         @Override
         public void broadcast(BaseComponent... components) {
-            for (Player player : CraftServer.this.getOnlinePlayers()) {
+            for (Player player : CraftServer.this.getAllOnlinePlayers()) { // MultiPaper
                 player.spigot().sendMessage(components);
             }
         }
diff --git a/src/main/java/puregero/multipaper/MultiPaperPermissionSyncer.java b/src/main/java/puregero/multipaper/MultiPaperPermissionSyncer.java
index 5c52e8351d82e799b383f44906c1c74bd0c5e8d9..27c4d5fce8aff4303b371464b8a13b488d62e261 100644
--- a/src/main/java/puregero/multipaper/MultiPaperPermissionSyncer.java
+++ b/src/main/java/puregero/multipaper/MultiPaperPermissionSyncer.java
@@ -25,7 +25,7 @@ public class MultiPaperPermissionSyncer {
             return;
         }
 
-        for (Player player : Bukkit.getOnlinePlayers()) {
+        for (Player player : Bukkit.getAllOnlinePlayers()) {
             syncers.computeIfAbsent(player, MultiPaperPermissionSyncer::new);
         }
 
diff --git a/src/main/java/puregero/multipaper/commands/SListCommand.java b/src/main/java/puregero/multipaper/commands/SListCommand.java
index 2b9d8875353e9353929d85ec528eee31bfdd3e03..474bc0197f440b96344ec4796dec24a8477d35c6 100644
--- a/src/main/java/puregero/multipaper/commands/SListCommand.java
+++ b/src/main/java/puregero/multipaper/commands/SListCommand.java
@@ -20,7 +20,7 @@ public class SListCommand extends Command {
     public boolean execute(CommandSender sender, String commandLabel, String[] args) {
         if (!testPermission(sender)) return false;
 
-        sender.sendMessage(ChatColor.WHITE + "There are " + Bukkit.getOnlinePlayers().size() + " out of " + Bukkit.getMaxPlayers() + " players online");
+        sender.sendMessage(ChatColor.WHITE + "There are " + Bukkit.getAllOnlinePlayers().size() + " out of " + Bukkit.getMaxPlayers() + " players online");
 
         for (ExternalServer server : MultiPaper.getConnection().getServersMap().values()) {
             String name = ChatColor.GREEN + "[" + server.getName() + "] ";
